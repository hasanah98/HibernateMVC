package com.sjbb.entity;
// Generated Apr 11, 2020 12:53:19 AM by Hibernate Tools 5.2.12.Final

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * OrderDetailId generated by hbm2java
 */
@Embeddable
public class OrderDetailId implements java.io.Serializable {

	private int idOrder;
	private int idCategory;
	private int quantity;
	private float subTotal;

	public OrderDetailId() {
	}

	public OrderDetailId(int idOrder, int idCategory, int quantity, float subTotal) {
		this.idOrder = idOrder;
		this.idCategory = idCategory;
		this.quantity = quantity;
		this.subTotal = subTotal;
	}

	@Column(name = "id_order", nullable = false)
	public int getIdOrder() {
		return this.idOrder;
	}

	public void setIdOrder(int idOrder) {
		this.idOrder = idOrder;
	}

	@Column(name = "id_category", nullable = false)
	public int getIdCategory() {
		return this.idCategory;
	}

	public void setIdCategory(int idCategory) {
		this.idCategory = idCategory;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "sub_total", nullable = false, precision = 12, scale = 0)
	public float getSubTotal() {
		return this.subTotal;
	}

	public void setSubTotal(float subTotal) {
		this.subTotal = subTotal;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof OrderDetailId))
			return false;
		OrderDetailId castOther = (OrderDetailId) other;

		return (this.getIdOrder() == castOther.getIdOrder()) && (this.getIdCategory() == castOther.getIdCategory())
				&& (this.getQuantity() == castOther.getQuantity()) && (this.getSubTotal() == castOther.getSubTotal());
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getIdOrder();
		result = 37 * result + this.getIdCategory();
		result = 37 * result + this.getQuantity();
		result = 37 * result + (int) this.getSubTotal();
		return result;
	}

}
